version: '3'
services:

  zoo1:
    container_name: zoo1
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:5.4.0
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092  # no need to expose external
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo1

  kfk-backend-console-producer:
    container_name: kfk-backend-console-producer
    image: danmgs/kafkaquickstart-backend-console-producer:1.8
    environment:
            KAFKA_BOOTSTRAPSERVERS: kafka1:19092
            KAFKA_TOPIC: topic_tweets
            TWITTER_OAUTH_CONSUMER_KEY: <YOUR_TWITTER_OAUTH_CONSUMER_KEY>
            TWITTER_OAUTH_CONSUMER_SECRET: <YOUR_TWITTER_OAUTH_CONSUMER_SECRET>
            TWITTER_API_URL: https://api.twitter.com/oauth2/token
            TWITTER_SEARCH_INTERVAL_MS: 15000
            TWITTER_SEARCH_KEYWORD: musique
    depends_on:
      - zoo1
      - kafka1
    restart: always

  kfk-backend-console-consumer:
    container_name: kfk-backend-console-consumer
    image: danmgs/kafkaquickstart-backend-console-consumer:1.8
    environment:
            KAFKA_BOOTSTRAPSERVERS: kafka1:19092
            KAFKA_TOPIC: topic_tweets
            KAFKA_GROUPID: my-consumer-group-id
            MESSAGE_API_URL: http://kfk-middleware-webapi:5001/api/message
    depends_on:
      - zoo1
      - kafka1
      - kfk-backend-console-producer
      - kfk-middleware-webapi # must link with api otherwise won't work under AWS and maybe under Azure too.
    restart: always

  kfk-middleware-webapi:
    container_name: kfk-middleware-webapi
    image: danmgs/kafkaquickstart-middleware-webapi:1.7
    hostname: kfk-middleware-webapi
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
      - ALLOW_CORS_ORIGINS=http://0.0.0.0

  kfk-frontend-webapp:
    container_name: kfk-frontend-webapp
    image: danmgs/kafkaquickstart-frontend-webapp:1.7
    ports:
      - "80:80"
    depends_on:
      - kfk-middleware-webapi